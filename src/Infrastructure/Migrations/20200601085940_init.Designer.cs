// <auto-generated />
using EZtouch.CarRentalHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using System.ComponentModel.DataAnnotations;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RentalDBContext))]
    [Migration("20200601085940_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Availability", b =>
                {
                    b.Property<byte>("AvailabilityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("AvailabilityId");

                    b.HasIndex("AvailabilityId")
                        .IsUnique()
                        .HasName("UQ_Availability_AvailabilityId");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasName("UQ_Availability_Description");

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("AvailabilityId");

                    b.Property<short>("ColorId");

                    b.Property<string>("ImgPath");

                    b.Property<double?>("Mileage");

                    b.Property<short>("ModelId");

                    b.Property<string>("RegPlateNo")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("YearManufactured")
                        .HasColumnType("date");

                    b.HasKey("CarId");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("CarId")
                        .IsUnique()
                        .HasName("UQ_Car_CarId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ModelId");

                    b.HasIndex("RegPlateNo")
                        .IsUnique()
                        .HasName("UQ_Car_RegPlateNo");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Class", b =>
                {
                    b.Property<byte>("ClassId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ClassId");

                    b.HasIndex("ClassId")
                        .IsUnique()
                        .HasName("UQ_Class_ClassId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ_Class_Name");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Color", b =>
                {
                    b.Property<short>("ColorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("char(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ColorId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("UQ_Color_Code");

                    b.HasIndex("ColorId")
                        .IsUnique()
                        .HasName("UQ_Color_ColorId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ_Color_Name");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Make", b =>
                {
                    b.Property<short>("MakeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("MakeId");

                    b.HasIndex("MakeId")
                        .IsUnique()
                        .HasName("UQ_Make_MakeId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ_Make_Name");

                    b.ToTable("Make");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Model", b =>
                {
                    b.Property<short>("ModelId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("ClassId");

                    b.Property<short>("MakeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("TransmissionId");

                    b.HasKey("ModelId");

                    b.HasIndex("ClassId");

                    b.HasIndex("MakeId");

                    b.HasIndex("ModelId")
                        .IsUnique()
                        .HasName("UQ_Model_ModelId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ_Model_Name");

                    b.HasIndex("TransmissionId");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarId");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("ExpectedReturnDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId");

                    b.HasKey("RentalId");

                    b.HasIndex("CarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RentalId")
                        .IsUnique()
                        .HasName("UQ_Rental_RentalId");

                    b.HasIndex("UserId");

                    b.ToTable("Rental");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Transmission", b =>
                {
                    b.Property<byte>("TransmissionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TransmissionId");

                    b.HasIndex("TransmissionId")
                        .IsUnique()
                        .HasName("UQ_Transmission_TransmissionId");

                    b.HasIndex("Type")
                        .IsUnique()
                        .HasName("UQ_Transmission_Type");

                    b.ToTable("Transmission");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasAnnotation("DataType", DataType.EmailAddress);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasAnnotation("DataType", DataType.Password);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<byte>("RoleId");

                    b.HasKey("UserId");

                    b.HasIndex("Dob")
                        .IsUnique()
                        .HasName("UQ_User_Email");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasName("UQ_User_Phone");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasName("UQ_User_UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.UserRole", b =>
                {
                    b.Property<byte>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ_UserRole_Name");

                    b.HasIndex("RoleId")
                        .IsUnique()
                        .HasName("UQ_UserRole_RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Car", b =>
                {
                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.Availability", "Availability")
                        .WithMany("Car")
                        .HasForeignKey("AvailabilityId")
                        .HasConstraintName("FK_Car_Availability");

                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.Color", "Color")
                        .WithMany("Car")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_Car_Color");

                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.Model", "Model")
                        .WithMany("Car")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK_Car_Model");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Model", b =>
                {
                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.Class", "Class")
                        .WithMany("Model")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_Model_Class");

                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.Make", "Make")
                        .WithMany("Model")
                        .HasForeignKey("MakeId")
                        .HasConstraintName("FK_Model_Make");

                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.Transmission", "Transmission")
                        .WithMany("Model")
                        .HasForeignKey("TransmissionId")
                        .HasConstraintName("FK_Model_Transmission");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.Rental", b =>
                {
                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.Car", "Car")
                        .WithMany("Rental")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK_Rental_Car");

                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.User", "Employee")
                        .WithMany("RentalEmployee")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Rental_Employee");

                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.User", "User")
                        .WithMany("RentalUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Rental_User");
                });

            modelBuilder.Entity("EZtouch.CarRentalHub.ApplicationCore.Entities.User", b =>
                {
                    b.HasOne("EZtouch.CarRentalHub.ApplicationCore.Entities.UserRole", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
